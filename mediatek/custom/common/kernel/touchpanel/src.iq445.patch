diff -ruN src/mtk_tpd.c src.iq445/mtk_tpd.c
--- src/mtk_tpd.c	2013-08-02 22:35:30.000000000 +0300
+++ src.iq445/mtk_tpd.c	2013-05-30 13:20:00.000000000 +0300
@@ -1,4 +1,22 @@
-
+/******************************************************************************
+ * mtk_tpd.c - MTK Android Linux Touch Panel Device Driver               *
+ *                                                                            *
+ * Copyright 2008-2009 MediaTek Co.,Ltd.                                      *
+ *                                                                            *
+ * DESCRIPTION:                                                               *
+ *     this file provide basic touch panel event to input sub system          *
+ *                                                                            *
+ * AUTHOR:                                                                    *
+ *     Kirby.Wu (mtk02247)                                                    *
+ *                                                                            *
+ * NOTE:                                                                      *
+ * 1. Sensitivity for touch screen should be set to edge-sensitive.           *
+ *    But in this driver it is assumed to be done by interrupt core,          *
+ *    though not done yet. Interrupt core may provide interface to            *
+ *    let drivers set the sensitivity in the future. In this case,            *
+ *    this driver should set the sensitivity of the corresponding IRQ         *
+ *    line itself.                                                            *
+ ******************************************************************************/
 
 #include "tpd.h"
 
@@ -18,6 +36,11 @@
 struct tpd_device  *tpd = 0;
 static struct tpd_driver_t tpd_driver_list[TP_DRV_MAX_COUNT] ;//= {0};
 
+//Ivan added gobel flag to all TP module
+//Ivan added
+int tp_boot_mode = 0;
+int key_event_flag=0;
+
 static struct platform_driver tpd_driver = {
     .remove     = tpd_remove,
     .shutdown   = NULL,
@@ -41,7 +64,7 @@
 };
 #endif
 
-static struct tpd_driver_t *g_tpd_drv = NULL;
+struct tpd_driver_t *g_tpd_drv = NULL;
 /* Add driver: if find TPD_TYPE_CAPACITIVE driver sucessfully, loading it */
 int tpd_driver_add(struct tpd_driver_t *tpd_drv)
 {
@@ -65,6 +88,9 @@
 			tpd_driver_list[0].suspend = tpd_drv->suspend;
 			tpd_driver_list[0].resume = tpd_drv->resume;
 			tpd_driver_list[0].tpd_have_button = tpd_drv->tpd_have_button;
+			tpd_driver_list[0].tpd_x_res = tpd_drv->tpd_x_res;
+			tpd_driver_list[0].tpd_y_res = tpd_drv->tpd_y_res;
+            tpd_driver_list[0].tpd_get_fw_version = NULL;
 			return 0;
 	}
 	for(i = 1; i < TP_DRV_MAX_COUNT; i++)
@@ -77,6 +103,15 @@
 			tpd_driver_list[i].suspend = tpd_drv->suspend;
 			tpd_driver_list[i].resume = tpd_drv->resume;
 			tpd_driver_list[i].tpd_have_button = tpd_drv->tpd_have_button;
+			tpd_driver_list[i].tpd_x_res = tpd_drv->tpd_x_res;
+			tpd_driver_list[i].tpd_y_res = tpd_drv->tpd_y_res;
+            tpd_driver_list[i].tpd_get_fw_version = tpd_drv->tpd_get_fw_version;
+			//edit by Magnum 2012-7-10
+			 tpd_driver_list[i].tpd_get_vendor_version= tpd_drv->tpd_get_vendor_version;
+			#ifdef CTP_SIMULATE_PS    //edit by Magnum 2013-5-16
+			tpd_driver_list[i].ctp_get_ps = tpd_drv->ctp_get_ps;
+			tpd_driver_list[i].ctp_convert = tpd_drv->ctp_convert;
+			#endif
 			#if 0
 			if(tpd_drv->tpd_local_init()==0)
 			{
@@ -115,6 +150,67 @@
 	return 0;
 }
 
+//edit by Magnum 2012-7-10 add ctp vendor-id attr
+static ssize_t tpd_vendor_version_show(struct device *dev, 
+		struct device_attribute *attr, char *buf)
+{
+    int vendor = 0;
+    if(g_tpd_drv && g_tpd_drv->tpd_get_vendor_version ){
+        vendor = g_tpd_drv->tpd_get_vendor_version();
+    }
+    return snprintf(buf, PAGE_SIZE, "%x\n", vendor);
+}
+
+static DEVICE_ATTR(vendor_version, S_IRUGO, tpd_vendor_version_show, NULL);
+
+static ssize_t tpd_fw_version_show(struct device *dev, 
+		struct device_attribute *attr, char *buf)
+{
+    int version = 0;
+    if(g_tpd_drv && g_tpd_drv->tpd_get_fw_version ){
+        version = g_tpd_drv->tpd_get_fw_version();
+    }
+    return snprintf(buf, PAGE_SIZE, "%x\n", version);
+}
+
+static DEVICE_ATTR(panel_version, S_IRUGO, tpd_fw_version_show, NULL);
+
+static ssize_t tpd_device_name_show(struct device *dev, 
+		struct device_attribute *attr, char *buf)
+{
+    if (g_tpd_drv && g_tpd_drv->tpd_device_name) {
+        return snprintf(buf, PAGE_SIZE, "%s\n", g_tpd_drv->tpd_device_name);
+    }
+
+    return 0;
+}
+static DEVICE_ATTR(device_name, S_IRUGO, tpd_device_name_show, NULL);
+char phonestate=0;
+/******************************************************************************/
+static ssize_t ft5x06_show_phone_state(struct device* dev, 
+                                 struct device_attribute *attr, char *buf)
+{
+    printk("ft5x06_show_phone_state phonestate=%d\n",phonestate);
+    return snprintf(buf, PAGE_SIZE, "%d\n", phonestate);
+}
+/******************************************************************************/
+static ssize_t ft5x06_store_phone_state(struct device* dev, struct device_attribute *attr,
+                                  const char *buf, size_t count)
+{
+    phonestate=buf[0];
+    printk("ft5x06_store_phone_state phonestate=%d,buf=%d\n",phonestate,buf[0]);
+    return 1;
+}
+/******************************************************************************/
+DEVICE_ATTR(phone_state,     S_IWUSR | S_IWGRP | S_IRUGO, ft5x06_show_phone_state,  ft5x06_store_phone_state);
+void tpd_create_attr_file(void)
+{
+    /* register the attributes */
+     printk("tpd_create_attr_file \n");
+     if (device_create_file(&tpd->dev->dev, &dev_attr_phone_state)){
+             printk("Register the attributes panel version is failed.");
+     }
+} 
 /* touch panel probe */
 static int tpd_probe(struct platform_device *pdev) {
 		int  touch_type = 1; // 0:R-touch, 1: Cap-touch
@@ -143,6 +239,8 @@
     /* allocate input device */
     if((tpd->dev=input_allocate_device())==NULL) { kfree(tpd); return -ENOMEM; }
   
+//Ivan move to lower part of this function
+/*
     TPD_RES_X = simple_strtoul(LCM_WIDTH, NULL, 0);
     TPD_RES_Y = simple_strtoul(LCM_HEIGHT, NULL, 0);
   
@@ -153,6 +251,8 @@
     tpd_mode_min = TPD_RES_Y/2;
     tpd_mode_max = TPD_RES_Y;
     tpd_mode_keypad_tolerance = TPD_RES_X*TPD_RES_X/1600;
+*/
+
     /* struct input_dev dev initialization and registration */
     tpd->dev->name = TPD_DEVICE;
     set_bit(EV_ABS, tpd->dev->evbit);
@@ -195,11 +295,24 @@
     register_early_suspend(&MTK_TS_early_suspend_handler);
     #endif		  
 #endif	  
+//Ivan <<
+    TPD_RES_X = g_tpd_drv->tpd_x_res;
+    TPD_RES_Y = g_tpd_drv->tpd_y_res;
+
+    printk("mtk_tpd: TPD_RES_X = %d, TPD_RES_Y = %d\n", TPD_RES_X, TPD_RES_Y);
+
+    tpd_mode = TPD_MODE_NORMAL;
+    tpd_mode_axis = 0;
+    tpd_mode_min = TPD_RES_Y/2;
+    tpd_mode_max = TPD_RES_Y;
+    tpd_mode_keypad_tolerance = TPD_RES_X*TPD_RES_X/1600;
+//Ivan >>
+
 //#ifdef TPD_TYPE_CAPACITIVE
 		/* TPD_TYPE_CAPACITIVE handle */
 		if(touch_type == 1){
 			
-		set_bit(ABS_MT_TRACKING_ID, tpd->dev->absbit);
+//Ivan		set_bit(ABS_MT_TRACKING_ID, tpd->dev->absbit);
     	set_bit(ABS_MT_TOUCH_MAJOR, tpd->dev->absbit);
     	set_bit(ABS_MT_TOUCH_MINOR, tpd->dev->absbit);
     	set_bit(ABS_MT_POSITION_X, tpd->dev->absbit);
@@ -238,8 +351,10 @@
     #endif
     if(input_register_device(tpd->dev))
         TPD_DMESG("input_register_device failed.(tpd)\n");
-    else
+    else {
 			tpd_register_flag = 1;
+			TPD_DMESG("input_register_device succeed!!\n");
+		}
     /* init R-Touch */
     #if 0
 	  if(touch_type == 0) 
@@ -251,12 +366,19 @@
     {
     	tpd_button_init();
     }
-
+	
+    device_create_file(&tpd->dev->dev, &dev_attr_panel_version);
+    device_create_file(&tpd->dev->dev, &dev_attr_device_name);
+	//edit by Magnum 2012-7-10
+	device_create_file(&tpd->dev->dev, &dev_attr_vendor_version);
+    tpd_create_attr_file();
     return 0;
 }
 
 static int tpd_remove(struct platform_device *pdev)
 {
+    device_remove_file(&tpd->dev->dev, &dev_attr_device_name);
+    device_remove_file(&tpd->dev->dev, &dev_attr_panel_version);
 	   input_unregister_device(tpd->dev);
     #ifdef CONFIG_HAS_EARLYSUSPEND
     unregister_early_suspend(&MTK_TS_early_suspend_handler);
diff -ruN src/tpd_button.c src.iq445/tpd_button.c
--- src/tpd_button.c	2012-11-13 05:56:23.000000000 +0200
+++ src.iq445/tpd_button.c	2013-05-16 09:55:00.000000000 +0300
@@ -1,14 +1,19 @@
-
 #include "tpd.h"
+#include <linux/delay.h>
 
 extern struct tpd_device *tpd;
+extern int tp_boot_mode;
 
 //#ifdef TPD_HAVE_BUTTON
 //static int tpd_keys[TPD_KEY_COUNT] = TPD_KEYS;
 //static int tpd_keys_dim[TPD_KEY_COUNT][4] = TPD_KEYS_DIM;
+#define VIRTUAL_KEY_DEB_TIME	3		//Ivan todo: will move to button init later
 static unsigned int tpd_keycnt = 0;
 static int tpd_keys[TPD_VIRTUAL_KEY_MAX]={0};
 static int tpd_keys_dim[TPD_VIRTUAL_KEY_MAX][4];// = {0};
+static int tpd_debounce[TPD_VIRTUAL_KEY_MAX];
+
+
 static ssize_t mtk_virtual_keys_show(struct kobject *kobj,
                    struct kobj_attribute *attr, char *buf) {
     int i, j;
@@ -40,18 +45,32 @@
 
 struct kobject *properties_kobj;
 
+
+void tpd_clr_key_debounce(void)
+{
+    int i;
+    for (i = 0; i < tpd_keycnt; i++)
+    {
+        //edit by Magnum 2012-2-7
+
+         tpd_debounce[i] = 0; //4//4
+         /*
+        if(cut_debounce==1)
+        {
+          tpd_debounce[i] = 4; //4//4
+          printk("Magnum tpd_debounce is 4\n");
+        } 
+        else
+        {
+		  tpd_debounce[i] = 0;
+		  printk("Magnum tpd_debounce is 0\n");
+        	}*/
+    }
+}
+ 
+//[wj add end]
 void tpd_button_init(void) {
-    int ret = 0, i = 0;
-#if 0
-	for(i=0; i<TPD_VIRTUAL_KEY_MAX; i++)
-	{
-		for(j=0; j<4; j++)
-		{
-			tpd_keys_dim[i][j]=0;
-		}
-	}
-#endif	
-//    if((tpd->kpd=input_allocate_device())==NULL) return -ENOMEM;
+    int ret = 0, i = 0, j=0;
     tpd->kpd=input_allocate_device();
     /* struct input_dev kpd initialization and registration */
     tpd->kpd->name = TPD_DEVICE "-kpd";
@@ -85,31 +104,102 @@
                x<=tpd_keys_dim[i][0]+(tpd_keys_dim[i][2]/2) &&
                y>=tpd_keys_dim[i][1]-(tpd_keys_dim[i][3]/2) &&
                y<=tpd_keys_dim[i][1]+(tpd_keys_dim[i][3]/2) &&
-               !(tpd->btn_state&(1<<i))) 
-            {
+/*               
+               !(tpd->btn_state&(1<<i))) {
                 input_report_key(tpd->kpd, tpd_keys[i], 1);
-				input_sync(tpd->kpd);
                 tpd->btn_state|=(1<<i);
                 TPD_DEBUG("[mtk-tpd] press key %d (%d)\n",i, tpd_keys[i]);
-				printk("[mtk-tpd] press key %d (%d)\n",i, tpd_keys[i]);
+*/
+               !(tpd->btn_state)) {
+                //Accept single key only
+//Ivan add key debounce
+               
+                if (tpd_debounce[i] > VIRTUAL_KEY_DEB_TIME)
+                {
+#ifdef TPD_TYPE_CAPACITIVE		    
+                   if(tp_boot_mode==NORMAL_BOOT){
+				   
+                       tpd_down(x , y, x , y, 1);
+                       input_report_abs(tpd->dev, ABS_MT_TRACKING_ID, 0);
+                    }
+                   else{
+				   
+                       input_report_key(tpd->kpd, tpd_keys[i], 1);
+                    }
+#else
+                 //  printk("Magnum i am in input key is %d\n",i);
+                   input_report_key(tpd->kpd, tpd_keys[i], 1);
+#endif
+//Ivan FIXME ???
+					input_sync(tpd->kpd);
+//
+                   tpd->btn_state|=(1<<i);
+                   TPD_DEBUG("[mt6516-tpd] press key %d (%d)\n",i, tpd_keys[i]);
+                }
+                else
+               {
+                  tpd_debounce[i]++;
+                   TPD_DEBUG("[mt6516-tpd] debounce key %d (%d)\n",i, tpd_keys[i]);
+               }
             }
         }
     } else {
         for(i=0;i<tpd_keycnt;i++) {
             if(tpd->btn_state&(1<<i)) {
+#ifdef TPD_TYPE_CAPACITIVE		    		
+                if(tp_boot_mode==NORMAL_BOOT){
+                    tpd_up(x , y, x , y, NULL);
+                    input_report_abs(tpd->dev, ABS_MT_TRACKING_ID, 0);
+                }
+                else{
+                     input_report_key(tpd->kpd, tpd_keys[i], 0);
+                }
+#else
                 input_report_key(tpd->kpd, tpd_keys[i], 0);
-				input_sync(tpd->kpd);
+#endif
                 TPD_DEBUG("[mtk-tpd] release key %d (%d)\n",i, tpd_keys[i]);
-				printk("[mtk-tpd] release key %d (%d)\n",i, tpd_keys[i]);
             }
         }
+        tpd_clr_key_debounce();
         tpd->btn_state=0;
     }
 }
+int tpd_button_discriminate(unsigned int x, unsigned int y) {
+    int i;
+        for(i=0;i<TPD_KEY_COUNT;i++) {
+            if(x>=tpd_keys_dim[i][0]-(tpd_keys_dim[i][2]/2) &&
+               x<=tpd_keys_dim[i][0]+(tpd_keys_dim[i][2]/2) &&
+               y>=tpd_keys_dim[i][1]-(tpd_keys_dim[i][3]/2) &&
+               y<=tpd_keys_dim[i][1]+(tpd_keys_dim[i][3]/2) &&
+               !(tpd->btn_state))
+               {                       //Accept single key only
+                       return tpd_keys[i];
+               }
+        }
+}
 void tpd_button_setting(int keycnt, void *keys, void *keys_dim)
 {
 		tpd_keycnt = keycnt;
 		memcpy(tpd_keys, keys, keycnt*4);
 		memcpy(tpd_keys_dim, keys_dim, keycnt*4*4);
 }
+
+//Ivan added
+void tpd_key(unsigned int index, unsigned int down)
+{
+    if(down) {
+        if(!(tpd->btn_state&(1<<(index-1)))) {
+            input_report_key(tpd->kpd, tpd_keys[(index-1)], 1);
+            tpd->btn_state|=(1<<(index-1));
+            TPD_DEBUG("[mt6516-tpd] press key %d (%d)\n",(index-1), tpd_keys[(index-1)]);
+        }
+    } else {
+        if(tpd->btn_state&(1<<(index-1))) {
+            input_report_key(tpd->kpd, tpd_keys[(index-1)], 0);
+            TPD_DEBUG("[mt6516-tpd] release key %d (%d)\n",(index-1), tpd_keys[(index-1)]);
+        }
+        tpd->btn_state=0;
+    }
+}
+
 //#endif
diff -ruN src/tpd_calibrate.c src.iq445/tpd_calibrate.c
--- src/tpd_calibrate.c	2012-11-13 05:55:46.000000000 +0200
+++ src.iq445/tpd_calibrate.c	2013-05-16 09:55:00.000000000 +0300
@@ -1,4 +1,3 @@
-
 #include "tpd.h"
 //#ifdef TPD_HAVE_CALIBRATION
 
diff -ruN src/tpd_calibrate.h src.iq445/tpd_calibrate.h
--- src/tpd_calibrate.h	2012-11-13 05:55:46.000000000 +0200
+++ src.iq445/tpd_calibrate.h	2013-05-16 09:55:00.000000000 +0300
@@ -1,4 +1,3 @@
-
 #ifndef TPD_CALIBRATE_H
 #define TPD_CALIBRATE_H
 #ifdef TPD_HAVE_CALIBRATION
diff -ruN src/tpd_debug.c src.iq445/tpd_debug.c
--- src/tpd_debug.c	2012-11-13 05:54:58.000000000 +0200
+++ src.iq445/tpd_debug.c	2013-05-16 09:55:00.000000000 +0300
@@ -1,4 +1,3 @@
-  
 #include <linux/vmalloc.h>  
 #include <asm/uaccess.h>
 #include <linux/major.h>
diff -ruN src/tpd_debug.h src.iq445/tpd_debug.h
--- src/tpd_debug.h	2012-11-13 05:56:11.000000000 +0200
+++ src.iq445/tpd_debug.h	2013-05-16 09:55:00.000000000 +0300
@@ -1,4 +1,3 @@
-
 #ifndef TPD_DEBUG_H
 #define TPD_DEBUG_H
 #ifdef TPD_DEBUG_CODE
diff -ruN src/tpd_default.c src.iq445/tpd_default.c
--- src/tpd_default.c	2012-11-13 05:55:41.000000000 +0200
+++ src.iq445/tpd_default.c	2013-05-16 09:55:00.000000000 +0300
@@ -1,4 +1,3 @@
-
 #include "tpd.h"
 
 //#ifndef TPD_CUSTOM_TREMBLE_TOLERANCE
diff -ruN src/tpd_default.h src.iq445/tpd_default.h
--- src/tpd_default.h	2012-11-13 05:55:41.000000000 +0200
+++ src.iq445/tpd_default.h	2013-05-16 09:55:00.000000000 +0300
@@ -1,4 +1,3 @@
-
 #ifndef TPD_FAT_TOUCH
 #define TPD_FAT_TOUCH 120
 #endif
diff -ruN src/tpd.h src.iq445/tpd.h
--- src/tpd.h	2012-11-13 05:55:06.000000000 +0200
+++ src.iq445/tpd.h	2013-05-30 13:20:00.000000000 +0300
@@ -1,4 +1,3 @@
-
 #include <linux/init.h>
 #include <linux/module.h>
 #include <linux/kernel.h>
@@ -9,12 +8,18 @@
 #include <linux/seq_file.h>
 #include <linux/list.h>
 #include <linux/proc_fs.h> 
+
+#ifdef MT6577
+    #include <mach/mt_gpio.h>
+    #include <mach/mt_devs.h>
+    #include <mach/mt_reg_base.h>
+    #include <mach/mt_typedefs.h>
+#endif
 #ifdef MT6575
-    //#include <mach/mt6573_pll.h>
-    #include <mach/mt6575_gpio.h>
-    #include <mach/mt6575_devs.h>
-    #include <mach/mt6575_reg_base.h>
-    #include <mach/mt6575_typedefs.h>
+    #include <mach/mt_gpio.h>
+    #include <mach/mt_devs.h>
+    #include <mach/mt_reg_base.h>
+    #include <mach/mt_typedefs.h>
 #endif
 #ifdef MT6573
     #include <mach/mt6573_pll.h>
@@ -41,7 +46,7 @@
 //#include "tpd_custom.h"
 
 /* debug macros */
-////#define TPD_DEBUG
+#define TPD_DEBUG
 #define TPD_DEBUG_CODE
 //#define TPD_DEBUG_TRACK
 #define TPD_DMESG(a,arg...) printk(TPD_DEVICE ": " a,##arg)
@@ -93,7 +98,7 @@
 extern int TPD_DO_WARP;
 extern int tpd_wb_start[];
 extern int tpd_wb_end[];
-
+#define TPD_KEY_COUNT           3
 struct tpd_device
 {
     struct input_dev *dev;
@@ -110,6 +115,15 @@
  		void (*suspend)(struct early_suspend *h);
  		void (*resume)(struct early_suspend *h);
  		int tpd_have_button;
+//Ivan added
+		int tpd_x_res;
+		int tpd_y_res;
+       		int (*tpd_get_fw_version)(void);
+		int (*tpd_get_vendor_version)(void);  //edit by Magnum
+	#ifdef CTP_SIMULATE_PS    //edit by Magnum 2013-5-16
+		int (*ctp_get_ps)(void);
+		void (*ctp_convert)(char mode,bool force);
+	#endif
 };
 
 #if 1 //#ifdef TPD_HAVE_BUTTON
diff -ruN src/tpd_init.c src.iq445/tpd_init.c
--- src/tpd_init.c	2012-11-13 05:56:16.000000000 +0200
+++ src.iq445/tpd_init.c	2013-05-16 09:55:00.000000000 +0300
@@ -1,2 +1 @@
-
 // dummy file, temporarily for remake
diff -ruN src/tpd_misc.c src.iq445/tpd_misc.c
--- src/tpd_misc.c	2012-11-13 05:56:19.000000000 +0200
+++ src.iq445/tpd_misc.c	2013-05-16 09:55:00.000000000 +0300
@@ -1,4 +1,3 @@
-
 #include "tpd.h"
 
 int tpd_calibrate_en = 0;
diff -ruN src/tpd_setting.c src.iq445/tpd_setting.c
--- src/tpd_setting.c	2013-10-15 17:46:23.693363655 +0300
+++ src.iq445/tpd_setting.c	2013-05-16 09:55:00.000000000 +0300
@@ -1,8 +1,5 @@
-
 #include "tpd.h"
 
-//int TPD_RES_X = 320;
-//int TPD_RES_Y = 480;
 int TPD_RES_X = 480;
 int TPD_RES_Y = 800;
 
